ifeq ($(CC),cc)
CC=gcc
endif

CFLAGS=-std=c99 -g -Wall -Wno-attributes -Wno-unused-function -Wno-unused-variable
OPT=-O3
OPTSSE3=-O3 -msse -msse2 -msse3 -DSSE3_DOUBLE
OPTAVX=-O3 -msse -msse2 -msse3 -mavx -DAVX_DOUBLE

UNROLLMAX=-1
UNROLLMAX2=-1
MAXBUTWIDTH=5

# Detect number of processors

NPROCS := 1
OS := $(shell uname)
export NPROCS
ifeq ($J,)
ifeq ($(NUMBER_OF_PROCESSORS),)
ifeq ($(OS),Linux)
  NPROCS := $(shell grep -c ^processor /proc/cpuinfo)
else ifeq ($(OS),Darwin)
  NPROCS := $(shell system_profiler | awk '/Number of CPUs/ {print $$4}{next;}')
endif # $(OS)
else
  NPROCS := $(NUMBER_OF_PROCESSORS)
endif
else
  NPROCS := $J
endif # $J

# Detect architecture

GCCARCH = $(shell $(CC) -v 2>&1 | grep ^Target | sed -e 's/^.* //g' -e 's/-.*//g')

ISALIST=purecdp

ifeq "$(GCCARCH)" "i386"
	ISALIST=purecdp sse3dp avxdp
endif

ifeq "$(GCCARCH)" "i686"
	ISALIST=purecdp sse3dp avxdp
endif

ifeq "$(GCCARCH)" "x86_64"
	ISALIST=purecdp sse3dp avxdp
endif

#

all : dft.a

clean :
	rm -f *.o *.s *~ *.exe
	rm -f a.out mkunroll mkdispatch dispatch.h dft.a dftsp.a naivetest
	rm -f unroll0_*.c unroll1_*.c unroll2_*.c unroll0s_*.c unroll1s_*.c unroll2s_*.c 

naivetest : naivetest.c dft.a
	$(CC) $(CFLAGS) naivetest.c -o naivetest dft.a -lm 

dft.a : mkunroll dft.o
	./mkunroll $(UNROLLMAX) $(UNROLLMAX2) $(ISALIST)
	"$(MAKE)" -j $(NPROCS) -f Makefile.unroll CC=$(CC) MAXBUTWIDTH=$(MAXBUTWIDTH) UNROLLMAX=$(UNROLLMAX) UNROLLMAX2=$(UNROLLMAX2) OBJ="`echo unroll*.c | sed -e 's/\.c/\.o/g'`"
	ar rcs dft.a `echo unroll*.o` dft.o

dft.o : dft.c dispatch.h
	$(CC) $(CFLAGS) $(OPT) dft.c -c -o dft.o

mkdispatch : mkdispatch.c
	$(CC) $(CFLAGS) mkdispatch.c -o mkdispatch

mkunroll : mkunroll.c
	$(CC) $(CFLAGS) mkunroll.c -o mkunroll

dispatch.h : mkdispatch
	./mkdispatch $(UNROLLMAX) $(UNROLLMAX2) $(MAXBUTWIDTH) $(ISALIST) > dispatch.h
